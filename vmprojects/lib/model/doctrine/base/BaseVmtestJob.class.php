<?php

/**
 * BaseVmtestJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $type
 * @property string $company
 * @property string $picture
 * @property string $url
 * @property integer $width
 * @property integer $height
 * @property string $description
 * @property string $token
 * @property boolean $is_public
 * @property boolean $is_activated
 * @property string $email
 * @property timestamp $expires_at
 * @property VmtestCategory $VmtestCategory
 * 
 * @method integer        getCategoryId()     Returns the current record's "category_id" value
 * @method string         getType()           Returns the current record's "type" value
 * @method string         getCompany()        Returns the current record's "company" value
 * @method string         getPicture()        Returns the current record's "picture" value
 * @method string         getUrl()            Returns the current record's "url" value
 * @method integer        getWidth()          Returns the current record's "width" value
 * @method integer        getHeight()         Returns the current record's "height" value
 * @method string         getDescription()    Returns the current record's "description" value
 * @method string         getToken()          Returns the current record's "token" value
 * @method boolean        getIsPublic()       Returns the current record's "is_public" value
 * @method boolean        getIsActivated()    Returns the current record's "is_activated" value
 * @method string         getEmail()          Returns the current record's "email" value
 * @method timestamp      getExpiresAt()      Returns the current record's "expires_at" value
 * @method VmtestCategory getVmtestCategory() Returns the current record's "VmtestCategory" value
 * @method VmtestJob      setCategoryId()     Sets the current record's "category_id" value
 * @method VmtestJob      setType()           Sets the current record's "type" value
 * @method VmtestJob      setCompany()        Sets the current record's "company" value
 * @method VmtestJob      setPicture()        Sets the current record's "picture" value
 * @method VmtestJob      setUrl()            Sets the current record's "url" value
 * @method VmtestJob      setWidth()          Sets the current record's "width" value
 * @method VmtestJob      setHeight()         Sets the current record's "height" value
 * @method VmtestJob      setDescription()    Sets the current record's "description" value
 * @method VmtestJob      setToken()          Sets the current record's "token" value
 * @method VmtestJob      setIsPublic()       Sets the current record's "is_public" value
 * @method VmtestJob      setIsActivated()    Sets the current record's "is_activated" value
 * @method VmtestJob      setEmail()          Sets the current record's "email" value
 * @method VmtestJob      setExpiresAt()      Sets the current record's "expires_at" value
 * @method VmtestJob      setVmtestCategory() Sets the current record's "VmtestCategory" value
 * 
 * @package    vmtest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVmtestJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vmtest_job');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('width', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('height', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('expires_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VmtestCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}