<?php

/**
 * BaseBlogPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $body
 * @property string $author
 * @property Doctrine_Collection $Tags
 * 
 * @method string              getTitle()  Returns the current record's "title" value
 * @method clob                getBody()   Returns the current record's "body" value
 * @method string              getAuthor() Returns the current record's "author" value
 * @method Doctrine_Collection getTags()   Returns the current record's "Tags" collection
 * @method BlogPost            setTitle()  Sets the current record's "title" value
 * @method BlogPost            setBody()   Sets the current record's "body" value
 * @method BlogPost            setAuthor() Sets the current record's "author" value
 * @method BlogPost            setTags()   Sets the current record's "Tags" collection
 * 
 * @package    vmtest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Tag as Tags', array(
             'refClass' => 'BlogPostTag',
             'local' => 'blog_post_id',
             'foreign' => 'tag_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}